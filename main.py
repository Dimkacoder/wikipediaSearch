import requests.exceptions
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import wikipediaapi
from os import getenv

TOKEN = getenv('TOKEN')  # –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –∑–¥–µ—Å—å
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)
wiki_wiki = wikipediaapi.Wikipedia('ru')


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "/start"
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.from_user.id,
                           "–ü—Ä–∏–≤–µ—Ç!üëã\n–ù–∞–ø–∏—à–∏ –º–Ω–µ –ª—é–±–æ–π –∑–∞–ø—Ä–æ—Å, –∏ —è –Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±—è –æ—Ç–≤–µ—Ç –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏!üîç")


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª—é–±–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message_handler()
async def echo_message(message: types.Message):
    query = message.text
    try:
        # –ø–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ –∑–∞–ø—Ä–æ—Å—É
        page_py = wiki_wiki.page(query)
        if page_py.exists():
            await bot.send_message(message.from_user.id,
                                   f'<b>{page_py.title.upper()}</b>\n\n{page_py.summary[0:60]}...\n\n{page_py.fullurl}')
        else:
            await bot.send_message(message.from_user.id, '–¢–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üòî')
    except requests.exceptions.ConnectTimeout:
        await bot.send_message(message.from_user.id, '–°–µ—Ä–≤–µ—Ä –í–∏–∫–∏–ø–µ–¥–∏–∏ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω‚ö†Ô∏è\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ '
                                                     '–ø–æ–∑–∂–µ üïê')


if __name__ == '__main__':
    executor.start_polling(dp)
